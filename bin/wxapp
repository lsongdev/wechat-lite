#!/usr/bin/env node

const {
  MINA
} = require('..');

const devtools = new MINA();

const program = options => {
  const commands = {};
  return {
    command(name, fn){
      commands[name] = fn;
      return this;
    },
    parse(argv){
      const [ name = 'help', ...args ] = argv.slice(2);
      const command = commands[name];
      if(typeof command === 'function'){
        command.call(this, args.reduce((args, flag) => {
          const [ key, value = true ] = flag.split('=');
          args[key.slice(2)] = value;
          return args;
        }, {}));
      }else{
        console.error(`command "${name}" not found`);
      }
      return this;
    }
  };
};

program()
.command('login', async () => {
  devtools.qrconnect({
    redirect_uri: 'https://mp.weixin.qq.com/xxx'
  }, async (err, {
    state,
    qrcode,
    code
  }) => {
    switch (state) {
      case 0:
        console.log('qrcode', qrcode);
        break;
      case 405:
        console.log('scan success', code);
        const user = await devtools.login(code);
        devtools.newticket = user.newticket;
        console.log('user', user);
        break;
    }
  });
})
.command('preview', async ({ filename, path }) => {
  await devtools.preview(filename, path);
})
.command('upload', async ({ filename, version, message }) => {
  await devtools.publish(filename, version, message);
})
.parse(process.argv);